/* Generated by AN DISI Unibo */ 
package it.unibo.gui

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Gui ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "init"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		
				var LedStatus = "off"
				var Position = 0.0
				var CurrentGlass = 0.0
				var CurrentPaper = 0.0
		return { //this:ActionBasciFsm
				state("init") { //this:State
					action { //it:State
					}
					 transition(edgeName="t025",targetState="handlePosition",cond=whenEvent("tStatus"))
					transition(edgeName="t026",targetState="handleLed",cond=whenDispatch("ledStatus"))
					transition(edgeName="t027",targetState="handleStorage",cond=whenEvent("storageUpdate"))
				}	 
				state("handleLed") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("ledStatus(STATUS)"), Term.createTerm("ledStatus(STATUS)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 LedStatus = payloadArg(0)  
						}
						println("LedStatus: $LedStatus")
						println("Position: $Position")
						println("CurrentGlass: $CurrentGlass")
						println("CurrentPaper: $CurrentPaper")
					}
					 transition( edgeName="goto",targetState="init", cond=doswitch() )
				}	 
				state("handlePosition") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("tStatus(STATE,POSDATA)"), Term.createTerm("tStatus(_,POS)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 Position = payloadArg(1).toDouble()  
						}
					}
					 transition( edgeName="goto",targetState="init", cond=doswitch() )
				}	 
				state("handleStorage") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("storageUpdate(MAT,QNT)"), Term.createTerm("storageUpdate(MAT,QNT)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								if(  payloadArg(0) == "glass"  
								 ){ CurrentGlass = payloadArg(1).toDouble()  
								}
								else
								 { CurrentPaper = payloadArg(1).toDouble()  
								 }
						}
						println("LedStatus: $LedStatus")
						println("Position: $Position")
						println("CurrentGlass: $CurrentGlass")
						println("CurrentPaper: $CurrentPaper")
					}
					 transition( edgeName="goto",targetState="init", cond=doswitch() )
				}	 
			}
		}
}
